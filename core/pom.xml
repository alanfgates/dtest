<?xml version="1.0"?>
<!--
Copyright (C) 2018 Hortonworks Inc.

Licenced under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.dtest</groupId>
    <artifactId>dtest</artifactId>
    <version>0.3.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>dtest-core</artifactId>
  <packaging>jar</packaging>
  <name>dtest core interfaces and implementation</name>
  <description>Core classes and base implementation of DTest.  If you want to use the command line tool and don&apos;t
  need a custom implementation of how to build the tests this is all you need.  If you want to run this from maven
  you also need the dtest-maven-plugin module.  You can build your own implementations of the base classes in this
  file if you have more elaborate requirements.</description>

  <properties>
      <version.src.dir>${project.build.sourceDirectory}</version.src.dir>
      <version.package.dir>org/dtest/core</version.package.dir>
      <version.package.name>org.dtest.core</version.package.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons-cli.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
      <version>5.1.0</version>
    </dependency>
    -->
    <dependency>
      <groupId>sax</groupId>
      <artifactId>sax</artifactId>
      <version>2.0.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>dtest-core-${project.version}</finalName>
              <descriptors>
                <descriptor>src/assembly/bin.xml</descriptor>
              </descriptors>
              <tarLongFileMode>gnu</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- This automatically creates a version class with the current version. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <echo file="${project.build.directory}/generated-sources/${version.package.dir}/Version.java" message="package ${version.package.name};${line.separator}" />
                <echo file="${project.build.directory}/generated-sources/${version.package.dir}/Version.java" append="true" message="public final class Version {${line.separator}" />
                <echo file="${project.build.directory}/generated-sources/${version.package.dir}/Version.java" append="true"
                      message=" public static String VERSION=&quot;${project.version}&quot;;${line.separator}" />
                <echo file="${project.build.directory}/generated-sources/${version.package.dir}/Version.java" append="true"
                      message=" public static String BUILD_TIME=&quot;${maven.build.timestamp}&quot;;${line.separator}" />
                <echo file="${project.build.directory}/generated-sources/${version.package.dir}/Version.java" append="true" message="}${line.separator}" />
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- This adds the generated sources into the set of things to be compiled -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
